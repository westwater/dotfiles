#!/usr/bin/env bash
# My run commands

# global variables
EDITOR='micro'
# export JAVA_OPTS="-Dfile.encoding=UTF8 -Xms1G -Xmx4G -XX:ReservedCodeCacheSize=250M -XX:+TieredCompilation -XX:+UseParallelGC -XX:MaxInlineLevel=18"
export SDKMAN_DIR="$HOME/.sdkman"
export NODE_PATH=/usr/local/lib/node_modules
export YOURKIT_HOME="/Applications/YourKit-Java-Profiler-2020.7.app/Contents/Resources"
export GOROOT="/usr/local/Cellar/go/1.16.3/libexec"

# function path_remove {
#   # Delete path by parts so we can never accidentally remove sub paths
#   PATH=${PATH//":$1:"/":"} # delete any instances in the middle
#   PATH=${PATH/#"$1:"/} # delete any instance at the beginning
#   PATH=${PATH/%":$1"/} # delete any instance in the at the end
# }
#
# path_remove "/usr/bin/java"

# fzf
export FZF_CTRL_T_COMMAND="fd -t d -d 1 ."

# marker
[[ -s "$HOME/.local/share/marker/marker.sh" ]] && source "$HOME/.local/share/marker/marker.sh"

# bat
export BAT_THEME="1337"

# direnv
if type "direnv" > /dev/null; then
	eval "$(direnv hook zsh)"
fi

# rbenv
if type "rbenv" > /dev/null; then
	export PATH="$HOME/.rbenv/bin:$PATH"
	eval "$(rbenv init -)"
fi

# pyenv
# remember to run pyenv rehash after upgrading to change version in shims
if type "pyenv" > /dev/null; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$(pyenv root)/shims:$PATH"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init --path)"
fi

# krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

#Â nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# functions

# greps the shell commands loaded on startup to find where
# a specific environment variable is loaded from
# usage: find_var some_env_variable
#
# todo: fix needed
#   - need to open new tab after use
#     or
#   - need to execute 'exit' after use
find_var() { zsh -xl 2>&1 | grep $1 ; }

# files to load on startup
filesToLoad=(
  # dotfiles/.animate_prompt
  dotfiles/scripts/colours.sh
  dotfiles/.aliases
  dotfiles/.extensions
  dotfiles/.pl9k_theme
  vault/secrets
  .sdkman/bin/sdkman-init.sh
)

for file in "${filesToLoad[@]}"; do
  [[ -s "$HOME/$file" ]] && source "$HOME/$file"
done
